# these two lines are created by the app2.php file
# Genes <- unlist(strsplit(input$Genes,"\n|\t|,| ")) 
# network <- "Human_liver_network"
library(igraph)
options(stringsAsFactors = FALSE) 
Jaccard2 <- function(set1,set2){
  I <- length(intersect(set1,set2))
  return(I/(length(set1)+length(set2)-I))
}
load("/srv/shiny-server/Network_drug_repositioning/human_liver_package.rda")
load("/srv/shiny-server/Network_drug_repositioning/Mouse_liver_package.rda")

percent = 0
if(network %in% "Human_liver_network"){
  diseasegenes <- Genes[Genes %in% V(net_human)$name]
  if(length(diseasegenes) == 0){
    Genes <- RAT_symbols2$human_symbol[RAT_symbols2$rat_symbol %in% Genes]
    diseasegenes <- Genes[Genes %in% V(net_human)$name]
  }
  # if(length(diseasegenes) == 0){
  #   setProgress(message = "please check your input format or your genes are not on the network")
  #   analysisoutput$message <- "Error, please check your input format or your genes are not on the network"
  #}else{
  #setProgress(message = "Start analysis, will take minutes")
  net <- net_human
  DOBtable <- DOBtable_human
  alldistancetable <- alldistancetable_human
  allchangegenelist <- allchangegenelist_human
  DEGlist_up <- human_DEGlist_up
  DEGlist_down <- human_DEGlist_down
  
  Diseasedeg <- degree(net, v = diseasegenes, mode = "all",
                       loops = TRUE, normalized = FALSE)
  
  DiseaseDEGtable <- as.data.frame(table(Diseasedeg), stringsAsFactors = FALSE)
  DiseaseDEGtable$Diseasedeg <- as.numeric(DiseaseDEGtable$Diseasedeg)
  DiseaseDEGtable$Freq <- as.numeric(DiseaseDEGtable$Freq)
 
  
  for(i in 1:nrow(DiseaseDEGtable)){
    genenumber <- DiseaseDEGtable$Freq[i]
    DEGnumber <- DiseaseDEGtable$Diseasedeg[i]
    
    if(DEGnumber >= 31 & DEGnumber < 33){DEGnumber <- 31:32
    }else if(DEGnumber >= 33 & DEGnumber < 36){DEGnumber <- 33:35
    }else if(DEGnumber >= 36 & DEGnumber < 40){DEGnumber <- 36:39
    }else if(DEGnumber >= 40 & DEGnumber < 45){DEGnumber <- 40:44
    }else if(DEGnumber >= 45 & DEGnumber < 51){DEGnumber <- 45:50
    }else if(DEGnumber >= 51){DEGnumber <- 51:201}
    genepools <- DOBtable$gene[DOBtable$degree %in% DEGnumber]
    sampledgenes <- replicate(1000,sample(genepools,genenumber,replace = TRUE))
    if(!exists("finalsample")){
      finalsample <- sampledgenes
    }else{
      finalsample <- rbind(finalsample,sampledgenes)
    }
  }
  if(class(finalsample) %in% "character"){
    randomgenes_disease <- as.list(finalsample)
  }else{
    randomgenes_disease <- split(finalsample, rep(1:ncol(finalsample), each = nrow(finalsample)))
    
  }
  resd <- NULL
  Jaccard_resd <- NULL
  alldrugs <- names(allchangegenelist)
# before the loop
breaks <- levels(cut(1:length(alldrugs), breaks = 100))
upperbounds <- sapply(breaks, function(x){return(unlist(strsplit(x, ","))[2])})
upperbounds <- as.numeric(gsub("]","",upperbounds))
names(upperbounds) <- 1:100
  for(j in 1:length(alldrugs )){

    if(j>upperbounds[percent+1]){
  percent = percent + 1
  cat(percent,"%","\n")
}
    changegenes <- allchangegenelist[[alldrugs[j]]]
    Drugdeg <- degree(net, v = changegenes, mode = "all",
                      loops = TRUE, normalized = FALSE)
    randomgenes_drug <- list()
    DrugDEGtable <- as.data.frame(table(Drugdeg), stringsAsFactors = FALSE)
    DrugDEGtable[,2] <- as.numeric(DrugDEGtable[,2])
    DrugDEGtable[,1] <- as.numeric(DrugDEGtable[,1])
    
    rm(finalsample)
    for(i in 1:nrow(DrugDEGtable)){
      genenumber <- DrugDEGtable$Freq[i]
      DEGnumber <- DrugDEGtable$Drugdeg[i]
      
      if(DEGnumber >= 31 & DEGnumber < 33){DEGnumber <- 31:32
      }else if(DEGnumber >= 33 & DEGnumber < 36){DEGnumber <- 33:35
      }else if(DEGnumber >= 36 & DEGnumber < 40){DEGnumber <- 36:39
      }else if(DEGnumber >= 40 & DEGnumber < 45){DEGnumber <- 40:44
      }else if(DEGnumber >= 45 & DEGnumber < 51){DEGnumber <- 45:50
      }else if(DEGnumber >= 51){DEGnumber <- 51:201}
      genepools <- DOBtable$gene[DOBtable$degree %in% DEGnumber]
      sampledgenes <- replicate(1000,sample(genepools,genenumber,replace = TRUE))
      if(!exists("finalsample")){
        finalsample <- sampledgenes
      }else{
        finalsample <- rbind(finalsample,sampledgenes)
      }
    }
    if(class(finalsample) %in% "character"){
      randomgenes_drug <- as.list(finalsample)
    }else{
      randomgenes_drug <- split(finalsample, rep(1:ncol(finalsample), each = nrow(finalsample)))
      
    }
    
    
    allscores <- NULL
    for(k in 1:1000){
      
      if(length(changegenes) == 1){
        allscores[k] <- mean(alldistancetable[randomgenes_drug[[k]],randomgenes_disease[[k]]], na.rm = T)
      }else{
        allscores[k] <- mean(apply( alldistancetable[randomgenes_drug[[k]],randomgenes_disease[[k]]], 1, min, na.rm = T ), na.rm = T)
      }
    }
    if(length(changegenes) == 1){
      res <- mean(alldistancetable[changegenes,diseasegenes], na.rm = T)
    }else{
      res <- mean(apply( alldistancetable[changegenes,diseasegenes], 1,min, na.rm = T ), na.rm = T)
    }
    resd[alldrugs[j]] <- (res-mean(allscores, na.rm = T))/sd(allscores,na.rm = T)
    Jaccard_resd[alldrugs[j]] <- Jaccard2(unique(c(DEGlist_up[[alldrugs[j]]], DEGlist_down[[alldrugs[j]]])),Genes)
  }
  tableresult <- data.frame(drugname = names(resd),z_score = resd, Jaccard_score = Jaccard_resd)
  # analysisoutput$message <-  setProgress(message = "You may check score table and download result")
  # analysisoutput$tableresult <- data.frame(drugname = names(resd),z_score = resd, Jaccard_score = Jaccard_resd)
  #}
}else{
  diseasegenes <- Genes[Genes %in% V(net_mouse)$name]
  if(length(diseasegenes) == 0){
    Genes <- RAT_symbols2$rat_symbol[RAT_symbols2$human_symbol %in% Genes]
    diseasegenes <- Genes[Genes %in% V(net_mouse)$name]
  }
  # if(length(diseasegenes) == 0){ # should implement this??? could crash otherwise
  #   setProgress(message = "please check your input format or your genes are not on the network")
  #   analysisoutput$message <- "Error, please check your input format or your genes are not on the network"
  #}else{
  #setProgress(message = "Start analysis, will take minutes")
  net <- net_mouse
  DOBtable <- DOBtable_mouse
  alldistancetable <- alldistancetable_mouse
  allchangegenelist <- allchangegenelist_mouse
  DEGlist_up <- Rat_DEGlist_up
  DEGlist_down <- Rat_DEGlist_down
  
  Diseasedeg <- degree(net, v = diseasegenes, mode = "all",
                       loops = TRUE, normalized = FALSE)
  
  DiseaseDEGtable <- as.data.frame(table(Diseasedeg), stringsAsFactors = FALSE)
  DiseaseDEGtable$Diseasedeg <- as.numeric(DiseaseDEGtable$Diseasedeg)
  DiseaseDEGtable$Freq <- as.numeric(DiseaseDEGtable$Freq)
  
  rm(finalsample)
  for(i in 1:nrow(DiseaseDEGtable)){
    genenumber <- DiseaseDEGtable$Freq[i]
    DEGnumber <- DiseaseDEGtable$Diseasedeg[i]
    
    if(DEGnumber >= 31 & DEGnumber < 33){DEGnumber <- 31:32
    }else if(DEGnumber >= 33 & DEGnumber < 36){DEGnumber <- 33:35
    }else if(DEGnumber >= 36 & DEGnumber < 40){DEGnumber <- 36:39
    }else if(DEGnumber >= 40 & DEGnumber < 45){DEGnumber <- 40:44
    }else if(DEGnumber >= 45 & DEGnumber < 51){DEGnumber <- 45:50
    }else if(DEGnumber >= 51){DEGnumber <- 51:201}
    genepools <- DOBtable$gene[DOBtable$degree %in% DEGnumber]
    sampledgenes <- replicate(1000,sample(genepools,genenumber,replace = TRUE))
    if(!exists("finalsample")){
      finalsample <- sampledgenes
    }else{
      finalsample <- rbind(finalsample,sampledgenes)
    }
  }
  if(class(finalsample) %in% "character"){
    randomgenes_disease <- as.list(finalsample)
  }else{
    randomgenes_disease <- split(finalsample, rep(1:ncol(finalsample), each = nrow(finalsample)))
    
  }
  
  resd <- NULL
  Jaccard_resd <- NULL
  alldrugs <- names(allchangegenelist)
breaks <- levels(cut(1:length(alldrugs), breaks = 100))
upperbounds <- sapply(breaks, function(x){return(unlist(strsplit(x, ","))[2])})
upperbounds <- as.numeric(gsub("]","",upperbounds))
names(upperbounds) <- 1:100
  for(j in 1:length(alldrugs )){
     if(j>upperbounds[percent+1]){
  percent = percent + 1
  cat(percent,"%","\n")
}
    changegenes <- allchangegenelist[[alldrugs[j]]]
    Drugdeg <- degree(net, v = changegenes, mode = "all",
                      loops = TRUE, normalized = FALSE)
    randomgenes_drug <- list()
    DrugDEGtable <- as.data.frame(table(Drugdeg), stringsAsFactors = FALSE)
    DrugDEGtable[,2] <- as.numeric(DrugDEGtable[,2])
    DrugDEGtable[,1] <- as.numeric(DrugDEGtable[,1])
    
    rm(finalsample)
    for(i in 1:nrow(DrugDEGtable)){
      genenumber <- DrugDEGtable$Freq[i]
      DEGnumber <- DrugDEGtable$Drugdeg[i]
      
      if(DEGnumber >= 31 & DEGnumber < 33){DEGnumber <- 31:32
      }else if(DEGnumber >= 33 & DEGnumber < 36){DEGnumber <- 33:35
      }else if(DEGnumber >= 36 & DEGnumber < 40){DEGnumber <- 36:39
      }else if(DEGnumber >= 40 & DEGnumber < 45){DEGnumber <- 40:44
      }else if(DEGnumber >= 45 & DEGnumber < 51){DEGnumber <- 45:50
      }else if(DEGnumber >= 51){DEGnumber <- 51:201}
      genepools <- DOBtable$gene[DOBtable$degree %in% DEGnumber]
      sampledgenes <- replicate(1000,sample(genepools,genenumber,replace = TRUE))
      if(!exists("finalsample")){
        finalsample <- sampledgenes
      }else{
        finalsample <- rbind(finalsample,sampledgenes)
      }
    }
    if(class(finalsample) %in% "character"){
      randomgenes_drug <- as.list(finalsample)
    }else{
      randomgenes_drug <- split(finalsample, rep(1:ncol(finalsample), each = nrow(finalsample)))
    }
    
    
    allscores <- NULL
    for(k in 1:1000){
      
      if(length(changegenes) == 1){
        allscores[k] <- mean(alldistancetable[randomgenes_drug[[k]],randomgenes_disease[[k]]], na.rm = T)
      }else{
        allscores[k] <- mean(apply( alldistancetable[randomgenes_drug[[k]],randomgenes_disease[[k]]], 1, min, na.rm = T ), na.rm = T)
      }
    }
    
    if(length(changegenes) == 1){
      res <- mean(alldistancetable[changegenes,diseasegenes], na.rm = T)
    }else{
      res <- mean(apply( alldistancetable[changegenes,diseasegenes], 1,min, na.rm = T ), na.rm = T)
    }
    resd[alldrugs[j]] <- (res-mean(allscores, na.rm = T))/sd(allscores,na.rm = T)
    Jaccard_resd[alldrugs[j]] <- Jaccard2(unique(c(DEGlist_up[[alldrugs[j]]], DEGlist_down[[alldrugs[j]]])),Genes)
  }
  #setProgress(message = "You may check score table and download result")
  #analysisoutput$tableresult <- data.frame(drugname = names(resd),z_score = resd, Jaccard_score = Jaccard_resd)
  tableresult <- data.frame(drugname = names(resd),z_score = resd, Jaccard_score = Jaccard_resd)
  #}
}
if(nrow(tableresult)==0 | !exists("tableresult")){
  tableresult = data.frame("Result"="Analysis gave no results.")
}
cat("100%","\n")
# write.table(tableresult, "./Data/Pipeline/Results/PharmOmics/1TEST123app2result.txt", row.names=FALSE, quote = FALSE, sep = "	")
